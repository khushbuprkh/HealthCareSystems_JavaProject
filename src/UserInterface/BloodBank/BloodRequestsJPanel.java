/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BloodBank;

import Business.Ambulance.AmbulanceWorkrequest;
import Business.BloodRequestQueue.BloodWorkRequest;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khushbu
 */
public class BloodRequestsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Enterprise enterprise;
    private UserAccount account;

    /**
     * Creates new form BloodRequestsJPanel
     */
    public BloodRequestsJPanel(JPanel userProcessContainer, UserAccount account,Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        this.account=account;
        populateTable();
    }
public void populateTable()
{
DefaultTableModel model = (DefaultTableModel) bloodRequestsjTable.getModel();

        model.setRowCount(0);

        for (BloodWorkRequest request : enterprise.getBloodWorkQueue().getWorkRequestList()) {
            
           Object row[] = new Object[8];
            row[0] = request;
            row[1] = request.getPatient().getType();
             UserAccount result = request.getSender();
            row[2] = result == null ? "Sensor" : result;
            row[3] = request.getReceiver();
            row[4] = request.getStatus();
            row[5] = request.getRequestDate();
            row[6] = request.getResolveDate();
            row[7] = request.getQuantity();
            
            ((DefaultTableModel) bloodRequestsjTable.getModel()).addRow(row);
        }



}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        processjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        bloodRequestsjTable = new javax.swing.JTable();

        processjButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        processjButton.setText("Process");
        processjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButtonActionPerformed(evt);
            }
        });

        bloodRequestsjTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bloodRequestsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient", "Blood Type", "Sender", "Receiver", "Status", "RequestDate", "ResolveDate", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(bloodRequestsjTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(725, Short.MAX_VALUE)
                        .addComponent(processjButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(processjButton)
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButtonActionPerformed
        // TODO add your handling code here:
         int row = bloodRequestsjTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        BloodWorkRequest wr = (BloodWorkRequest) bloodRequestsjTable.getValueAt(row, 0);
        java.util.Date date = new java.util.Date();
        date = new Timestamp(date.getTime());
        wr.setResolveDate(date);
        wr.setStatus("Delivered");
        wr.setReceiver(account);
//        wr.setResult(testResultjTextField.getText());
//        wr.setResultDesc(testDescjTextField.getText());
        populateTable();
                  
    }//GEN-LAST:event_processjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bloodRequestsjTable;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processjButton;
    // End of variables declaration//GEN-END:variables
}
