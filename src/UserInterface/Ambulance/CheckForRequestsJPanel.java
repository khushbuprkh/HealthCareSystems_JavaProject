/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Ambulance;

import Business.Ambulance.AmbulanceWorkrequest;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.NewOrganization;
import Business.UserAccount.UserAccount;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khushbu
 */
public class CheckForRequestsJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem system;
    private Enterprise enterprise;
    private NewOrganization organization;
    private Network network;
    /**
     * Creates new form CheckForRequestsJPanel
     */
    public CheckForRequestsJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system,Enterprise enterprise,Network network,NewOrganization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        this.enterprise=enterprise;
        this.organization=organization;
        this.network=network;
        populateTable();
    }
    public void populateTable()
    {
    DefaultTableModel model = (DefaultTableModel) ambulacneWorkrequestjTable.getModel();

        model.setRowCount(0);

        for (AmbulanceWorkrequest request : organization.getAmbulanceWorkQueue().getAmbulanceWorkRequestDir()) {
            Object row[] = new Object[6];
            row[0] = request;
            row[1] = request.getPatient().getAddress();
            row[2] = request.getReceiver();
            row[3] = request.getStatus();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            
            ((DefaultTableModel) ambulacneWorkrequestjTable.getModel()).addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ambulacneWorkrequestjTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processOrderjButton = new javax.swing.JButton();

        ambulacneWorkrequestjTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ambulacneWorkrequestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Address", "Receiver", "Status", "Request Dttm", "Request Closed Dttm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ambulacneWorkrequestjTable);

        assignJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processOrderjButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        processOrderjButton.setText("Process Order");
        processOrderjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processOrderjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assignJButton)
                        .addGap(367, 367, 367)
                        .addComponent(processOrderjButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignJButton)
                    .addComponent(processOrderjButton))
                .addContainerGap(98, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = ambulacneWorkrequestjTable.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        AmbulanceWorkrequest request = (AmbulanceWorkrequest) ambulacneWorkrequestjTable.getValueAt(selectedRow, 0);
        request.setReceiver(account);
        request.setStatus("Started");
        populateTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processOrderjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processOrderjButtonActionPerformed
        // TODO add your handling code here:
        int row = ambulacneWorkrequestjTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        AmbulanceWorkrequest wr = (AmbulanceWorkrequest) ambulacneWorkrequestjTable.getValueAt(row, 0);
        java.util.Date date = new java.util.Date();
        date = new Timestamp(date.getTime());
        wr.setResolveDate(date);
        wr.setStatus("Arrived");
        wr.setReceiver(account);
//        wr.setResult(testResultjTextField.getText());
//        wr.setResultDesc(testDescjTextField.getText());
        populateTable();
    }//GEN-LAST:event_processOrderjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ambulacneWorkrequestjTable;
    private javax.swing.JButton assignJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processOrderjButton;
    // End of variables declaration//GEN-END:variables
}
