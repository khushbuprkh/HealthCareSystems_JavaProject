/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;

import Business.Drugs.Drug;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Patient.Patient;
import Business.Prescription.Prescription;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khushbu
 */
public class WriteAPrescriptionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    private Enterprise enterprise;
    private EcoSystem system;
    private Network network;
    private UserAccount account;

    /**
     * Creates new form WriteAPrescriptionJPanel
     */
    public WriteAPrescriptionJPanel(JPanel userProcessContainer, UserAccount account, Patient patient, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.enterprise = enterprise;
        this.system = system;
        this.network = network;
        this.account = account;
        popData();
        populatePrescriptionTable();
    }

    public void populatePrescriptionTable() {

        DefaultTableModel model = (DefaultTableModel) prescriptionjTable.getModel();

        model.setRowCount(0);

        for (Prescription p : patient.getPrescriptionDir().getPrescriptionDir()) {
            Object row[] = new Object[5];
            row[0] = p.getDrug().getDrugName();
            row[1] = p.getDosage();
            row[2] = p.getStartDate();
            row[3] = p.getEndDate();
            row[4] = p.getPrescribedBy().getUsername();

            ((DefaultTableModel) prescriptionjTable.getModel()).addRow(row);
        }

    }

    public void popData() {
        Enterprise e = null;
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (ent.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.Pharmacy.getValue())) {
                e = ent;
                break;
            }
        }

        DefaultTableModel model = (DefaultTableModel) drugCatalogjTable.getModel();

        model.setRowCount(0);

        for (Drug drug : e.getDrugDirectory().getDrugList()) {
            Object row[] = new Object[5];
            row[0] = drug;
            row[1] = drug.getDrugContents();
            row[2] = drug.getDrugexpiryDate();
            row[3] = drug.getAvailableQuantity();
            row[4] = drug.getDrugCost();

            ((DefaultTableModel) drugCatalogjTable.getModel()).addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        drugCatalogjTable = new javax.swing.JTable();
        addtoPrescriptionjButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        prescriptionjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dosagejTextField = new javax.swing.JTextField();
        endjDateChooser = new com.toedter.calendar.JDateChooser();
        startjDateChooser = new com.toedter.calendar.JDateChooser();
        backJButton = new javax.swing.JButton();

        drugCatalogjTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        drugCatalogjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Drug Contents ", "Expiry Date", "Quantity", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(drugCatalogjTable);

        addtoPrescriptionjButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addtoPrescriptionjButton.setText("Add to Prescription");
        addtoPrescriptionjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoPrescriptionjButtonActionPerformed(evt);
            }
        });

        prescriptionjTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        prescriptionjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug", "Dosage", "Start date", "End date", "PrescribedBy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(prescriptionjTable);
        if (prescriptionjTable.getColumnModel().getColumnCount() > 0) {
            prescriptionjTable.getColumnModel().getColumn(0).setResizable(false);
            prescriptionjTable.getColumnModel().getColumn(1).setResizable(false);
            prescriptionjTable.getColumnModel().getColumn(2).setResizable(false);
            prescriptionjTable.getColumnModel().getColumn(3).setResizable(false);
            prescriptionjTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Dosage");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Start Date");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("End Date");

        dosagejTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        endjDateChooser.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        startjDateChooser.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dosagejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(33, 33, 33)
                        .addComponent(startjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(endjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(addtoPrescriptionjButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addtoPrescriptionjButton)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(dosagejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(endjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backJButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addtoPrescriptionjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoPrescriptionjButtonActionPerformed
// TODO add your handling code here:

        Date today = new Date();
        int row = drugCatalogjTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table!!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (dosagejTextField.getText().trim().isEmpty() || startjDateChooser.getDate() == null || endjDateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please provide input for all fields", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
        } else if (startjDateChooser.getDate().getTime() > endjDateChooser.getDate().getTime()) {
            JOptionPane.showMessageDialog(null, "End Date should be greater than the Start Date", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
        } else if (startjDateChooser.getDate().before(today)) {
            JOptionPane.showMessageDialog(null, "Startdate Should be greater than today's date", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int dose = Integer.parseInt(dosagejTextField.getText());
            Drug drug = (Drug) drugCatalogjTable.getValueAt(row, 0);
            boolean check=checkPatient(drug);
            if (!check)
            {
             JOptionPane.showMessageDialog(null, "Already prescribed", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
             return;
            }
            else{
            if (dose <= 0 || dose > 3) {
                JOptionPane.showMessageDialog(null, "Dose can be between 1-3", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
            } else {
               

                drug.setGetprescribedcount(drug.getGetprescribedcount() + 1);
                Prescription prescription = patient.getPrescriptionDir().addPrescription();
                prescription.setDrug(drug);
                prescription.setDosage(dose);
                prescription.setStartDate((Date) startjDateChooser.getDate());
                prescription.setEndDate((Date) endjDateChooser.getDate());
                prescription.setPrescribedBy(account);
                populatePrescriptionTable();
            }
            }
        }
    }//GEN-LAST:event_addtoPrescriptionjButtonActionPerformed

    public boolean checkPatient(Drug drug)
    { 
        boolean add=true;
        Date today=new Date();
            for (Prescription p : patient.getPrescriptionDir().getPrescriptionDir()) {
                    if (drug == p.getDrug()) {
                        if (p.getEndDate().after(today)) {
                              return false;
                        }
                    }
            }
    return true;
    }
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtoPrescriptionjButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField dosagejTextField;
    private javax.swing.JTable drugCatalogjTable;
    private com.toedter.calendar.JDateChooser endjDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable prescriptionjTable;
    private com.toedter.calendar.JDateChooser startjDateChooser;
    // End of variables declaration//GEN-END:variables
}
