/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;

import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.VitalSigns.VitalSign;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khushbu
 */
public class AddVitalSignJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    private UserAccount account;

    /**
     * Creates new form AddVitalSignJPanel
     */
    public AddVitalSignJPanel(JPanel userProcessContainer, Patient patient, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.account = account;
        popData();
        resetFields();
    }

    public void resetFields() {
        bloodsugarjLabel.setVisible(false);
        bodyTempjLabel.setVisible(false);
        weightjLabel.setVisible(false);
        rspiratoryratejLabel.setVisible(false);
        heartRatejLabel.setVisible(false);
        sysBPjLabel.setVisible(false);
        rbcCountjLabel.setVisible(false);
        respiratoryRatejTextField.setText("");
        heartRatejTextField.setText("");
        systolicBloodPressurejTextField.setText("");
        weightiInPoundsjTextField.setText("");
        bodyTemperaturejTextField.setText("");
        bloodSugarjTextField.setText("");
    }

    public void popData() {
        DefaultTableModel model = (DefaultTableModel) vitalSignjTable.getModel();

        model.setRowCount(0);

        for (VitalSign vitalSign : patient.getVitalSignHistory().getVitalSignList()) {
            Object row[] = new Object[9];
            row[0] = vitalSign.getBodyTemperature();
            row[1] = vitalSign.getBodyTemperature();
            row[2] = vitalSign.getBloodPressure();
            row[3] = vitalSign.getHeartRate();
            row[4] = vitalSign.getRespiratoryRate();
            row[5] = vitalSign.getWeight();
            row[6] = vitalSign.getRbcCount();
            row[7] = vitalSign.getUpdatedDttm();
            row[8] = vitalSign.getStatus();

            ((DefaultTableModel) vitalSignjTable.getModel()).addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        systolicBloodPressurejTextField = new javax.swing.JTextField();
        heartRatejTextField = new javax.swing.JTextField();
        respiratoryRatejTextField = new javax.swing.JTextField();
        weightiInPoundsjTextField = new javax.swing.JTextField();
        createVitalSignjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bodyTemperaturejTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignjTable = new javax.swing.JTable();
        bloodSugarjTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        bodyTempjLabel = new javax.swing.JLabel();
        bloodsugarjLabel = new javax.swing.JLabel();
        sysBPjLabel = new javax.swing.JLabel();
        rspiratoryratejLabel = new javax.swing.JLabel();
        heartRatejLabel = new javax.swing.JLabel();
        weightjLabel = new javax.swing.JLabel();
        rbcCountjTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rbcCountjLabel = new javax.swing.JLabel();

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Systolic Blood Pressure :");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Weight in Pounds :");

        systolicBloodPressurejTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        systolicBloodPressurejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                systolicBloodPressurejTextFieldActionPerformed(evt);
            }
        });
        systolicBloodPressurejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                systolicBloodPressurejTextFieldKeyTyped(evt);
            }
        });

        heartRatejTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        heartRatejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRatejTextFieldActionPerformed(evt);
            }
        });
        heartRatejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                heartRatejTextFieldKeyTyped(evt);
            }
        });

        respiratoryRatejTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        respiratoryRatejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                respiratoryRatejTextFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                respiratoryRatejTextFieldKeyTyped(evt);
            }
        });

        weightiInPoundsjTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        weightiInPoundsjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                weightiInPoundsjTextFieldKeyTyped(evt);
            }
        });

        createVitalSignjButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        createVitalSignjButton.setText("Save Vital Sign");
        createVitalSignjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVitalSignjButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Create Vital Sign ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Respiratory Rate :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Heart Rate :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Body Temprature:");

        bodyTemperaturejTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bodyTemperaturejTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bodyTemperaturejTextFieldKeyTyped(evt);
            }
        });

        vitalSignjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Body temp", "Blood Pressure", "Heart Rate", "RespiratoryRate", "Weight", "Blood Sugar", "RBC Count", "UpdateDttm", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignjTable);

        bloodSugarjTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bloodSugarjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bloodSugarjTextFieldKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Blood Sugar:");

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        bodyTempjLabel.setForeground(new java.awt.Color(255, 0, 51));
        bodyTempjLabel.setText("*Numeric Only");

        bloodsugarjLabel.setForeground(new java.awt.Color(255, 0, 51));
        bloodsugarjLabel.setText("*Numeric Only");

        sysBPjLabel.setForeground(new java.awt.Color(255, 0, 51));
        sysBPjLabel.setText("*Numeric Only");

        rspiratoryratejLabel.setForeground(new java.awt.Color(255, 0, 51));
        rspiratoryratejLabel.setText("*Numeric Only");

        heartRatejLabel.setForeground(new java.awt.Color(255, 0, 51));
        heartRatejLabel.setText("*Numeric Only");

        weightjLabel.setForeground(new java.awt.Color(255, 0, 51));
        weightjLabel.setText("*Numeric Only");

        rbcCountjTextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rbcCountjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rbcCountjTextFieldKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("RBC Count");

        rbcCountjLabel.setForeground(new java.awt.Color(255, 0, 51));
        rbcCountjLabel.setText("*Numeric Only");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(respiratoryRatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rspiratoryratejLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(rbcCountjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bodyTemperaturejTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                            .addComponent(bloodSugarjTextField, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bodyTempjLabel)
                                            .addComponent(bloodsugarjLabel)
                                            .addComponent(rbcCountjLabel)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(weightiInPoundsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sysBPjLabel)
                                            .addComponent(systolicBloodPressurejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(weightjLabel)
                                            .addComponent(heartRatejTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(heartRatejLabel)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(backJButton)
                                    .addComponent(jLabel6))
                                .addGap(36, 36, 36)
                                .addComponent(createVitalSignjButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(34, 123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(respiratoryRatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rspiratoryratejLabel))))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(heartRatejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(heartRatejLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(systolicBloodPressurejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sysBPjLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(weightiInPoundsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(weightjLabel)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bodyTempjLabel)
                    .addComponent(bodyTemperaturejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodSugarjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodsugarjLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbcCountjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(rbcCountjLabel))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(createVitalSignjButton))
                .addGap(71, 71, 71))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void systolicBloodPressurejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_systolicBloodPressurejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_systolicBloodPressurejTextFieldActionPerformed

    private void systolicBloodPressurejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_systolicBloodPressurejTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            sysBPjLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_systolicBloodPressurejTextFieldKeyTyped

    private void heartRatejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRatejTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRatejTextFieldActionPerformed

    private void heartRatejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_heartRatejTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            heartRatejLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_heartRatejTextFieldKeyTyped

    private void respiratoryRatejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_respiratoryRatejTextFieldKeyTyped
        // TODO add your handling code here:

        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            rspiratoryratejLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_respiratoryRatejTextFieldKeyTyped

    private void weightiInPoundsjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_weightiInPoundsjTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            weightjLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_weightiInPoundsjTextFieldKeyTyped
    public void backAction() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }
    private void createVitalSignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVitalSignjButtonActionPerformed
        // TODO add your handling code here:

        if (bodyTemperaturejTextField.getText().trim().isEmpty() || bloodSugarjTextField.getText().trim().isEmpty() || respiratoryRatejTextField.getText().trim().isEmpty() || heartRatejTextField.getText().trim().isEmpty() || systolicBloodPressurejTextField.getText().trim().isEmpty() || weightiInPoundsjTextField.getText().trim().isEmpty() || rbcCountjTextField.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide input for all fields", "Incomplete Form", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Date today= new Date();
          Calendar  fromDate=Calendar.getInstance();
       Calendar toDate=Calendar.getInstance();
       fromDate.setTime(patient.getDateOfBirth());
           toDate.setTime(today);
           int ageYear = toDate.get(Calendar.YEAR) - (fromDate.get(Calendar.YEAR));
            int resRate = Integer.parseInt(respiratoryRatejTextField.getText());
            int hr = Integer.parseInt(heartRatejTextField.getText());
            int sysBp = Integer.parseInt(systolicBloodPressurejTextField.getText());
            int weight = Integer.parseInt(weightiInPoundsjTextField.getText());
            int bodyTemp = Integer.parseInt(bodyTemperaturejTextField.getText());
            int bloodSugar = Integer.parseInt(bloodSugarjTextField.getText());
            int rbcCount = Integer.parseInt(rbcCountjTextField.getText());
            java.util.Date date = new java.util.Date();
            date = new Timestamp(date.getTime());

            VitalSign vitalsign = patient.getVitalSignHistory().addVitalSign();
            comparevalues(hr, resRate, resRate, sysBp, weight,bodyTemp,bloodSugar,rbcCount,patient,vitalsign);
            vitalsign.setAge(ageYear);
            vitalsign.setRespiratoryRate(resRate);
            vitalsign.setHeartRate(hr);
            vitalsign.setBloodPressure(sysBp);
            vitalsign.setWeight(weight);
            vitalsign.setRbcCount(rbcCount);
            vitalsign.setBodyTemperature(bodyTemp);
            vitalsign.setBloodSugarLevel(bloodSugar);
            vitalsign.setCreateDttm(date);
            vitalsign.setUpdatedDttm(date);
            vitalsign.setCheckedby(account);
            
            
            
            JOptionPane.showMessageDialog(null, "Profile Created", "Created Profile", JOptionPane.INFORMATION_MESSAGE);
            resetFields();
            backAction();
        }
//        resetFields();
    }//GEN-LAST:event_createVitalSignjButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void respiratoryRatejTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_respiratoryRatejTextFieldKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
//            respiratoryRatejLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_respiratoryRatejTextFieldKeyPressed

    private void bodyTemperaturejTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bodyTemperaturejTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            bodyTempjLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_bodyTemperaturejTextFieldKeyTyped

    private void bloodSugarjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bloodSugarjTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            bloodsugarjLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_bloodSugarjTextFieldKeyTyped

    private void rbcCountjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbcCountjTextFieldKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if (!(Character.isDigit(a) || a == KeyEvent.VK_DELETE || a == KeyEvent.VK_BACK_SPACE)) {
            rbcCountjLabel.setVisible(true);
            evt.consume();
        }
    }//GEN-LAST:event_rbcCountjTextFieldKeyTyped
  public void comparevalues(int age, int respRate , int heartRate , int sysBp , int weight, int bodytemp, int bloodsugar,int rbccount,Patient p,VitalSign vs)
    {   
    if(age>=1 && age<=3)
    {
        if((respRate>=20 && respRate<=30)&&(heartRate>=80 && heartRate<=130)&&(sysBp>=80 && sysBp<=110)&&(weight>=22 && weight<=31)&&(bodytemp>=98 && bodytemp<=100)&&(bloodsugar>=110 && bloodsugar<=130)&&(rbccount>=100 && rbccount<=120))
        {
            vs.setStatus("Normal");
            p.setNormalCount(p.getNormalCount()+1);
        }
        else
        {
           vs.setStatus("Abnormal");
            p.setAbnormalcount(p.getAbnormalcount()+1);
        }
    }   
   else if(age>=4 && age<=5)
    {
        if((respRate>=20 && respRate<=30)&&(heartRate>=80 && heartRate<=120)&&(sysBp>=80 && sysBp<=110)&&(weight>=31 && weight<=40)&&(bodytemp>=98 && bodytemp<=100)&&(bloodsugar>=110 && bloodsugar<=130)&&(rbccount>=100 && rbccount<=120))
        {
            vs.setStatus("Normal");
              p.setNormalCount(p.getNormalCount()+1);
        }
        else
        {
           vs.setStatus("Abnormal");
            p.setAbnormalcount(p.getAbnormalcount()+1);
        }
    }
    else if(age>=6 && age<=12)
    {
         if((respRate>=20 && respRate<=30)&&(heartRate>=70 && heartRate<=110)&&(sysBp>=80 && sysBp<=120)&&(weight>=41 && weight<=92)&&(bodytemp>=98 && bodytemp<=100)&&(bloodsugar>=110 && bloodsugar<=130)&&(rbccount>=100 && rbccount<=120))
        {
           vs.setStatus("Normal");
             p.setNormalCount(p.getNormalCount()+1);
        }
         else
         {
             vs.setStatus("Abnormal");
              p.setAbnormalcount(p.getAbnormalcount()+1);
         }
    }
    
    else if(age>=13)
    {
        if((respRate>=12 && respRate<=20)&&(heartRate>=55 && heartRate<=105)&&(sysBp>=110 && sysBp<=120)&&(weight>110)&&(bodytemp>=98 && bodytemp<=100)&&(bloodsugar>=110 && bloodsugar<=130)&&(rbccount>=100 && rbccount<=120))
        {
             vs.setStatus("Normal");
               p.setNormalCount(p.getNormalCount()+1);
        }
        else
        {
           vs.setStatus("Abnormal");
            p.setAbnormalcount(p.getAbnormalcount()+1);
        }
    }
    else
    {
      vs.setStatus("Abnormal");
      p.setAbnormalcount(p.getAbnormalcount()+1);
    }
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField bloodSugarjTextField;
    private javax.swing.JLabel bloodsugarjLabel;
    private javax.swing.JTextField bodyTemperaturejTextField;
    private javax.swing.JLabel bodyTempjLabel;
    private javax.swing.JButton createVitalSignjButton;
    private javax.swing.JLabel heartRatejLabel;
    private javax.swing.JTextField heartRatejTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rbcCountjLabel;
    private javax.swing.JTextField rbcCountjTextField;
    private javax.swing.JTextField respiratoryRatejTextField;
    private javax.swing.JLabel rspiratoryratejLabel;
    private javax.swing.JLabel sysBPjLabel;
    private javax.swing.JTextField systolicBloodPressurejTextField;
    private javax.swing.JTable vitalSignjTable;
    private javax.swing.JTextField weightiInPoundsjTextField;
    private javax.swing.JLabel weightjLabel;
    // End of variables declaration//GEN-END:variables
}
